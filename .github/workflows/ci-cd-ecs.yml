name: Deploy to Amazon ECS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'CD'
        required: true
        default: 'dev'
  push:
    branches: [ "main" ]

env:
  AWS_REGION: us-east-2                # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: dev/github-action           # set this to your Amazon ECR repository name
  ECS_SERVICE: ecs_service                 # set this to your Amazon ECS service name
  ECS_CLUSTER: ecs_cluster                 # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: .aws/ecs_task_definition.json       # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: ecs           # set this to the name of the container in the
  IMAGE_TAG: demo-app   


jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: |
        ./gradlew build
        ls build/libs/

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1


    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        IMAGE_URI=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
        docker push $IMAGE_URI
        echo "image=$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ${{ env.ECS_TASK_DEFINITION }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
